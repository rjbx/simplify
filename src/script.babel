const Btn = (props) => 
         <button class={props.class} onClick={props.handleClick} value={props.text} id={props.value ? props.value : props.text}>{props.text}</button>;
const Logo = () => 
        <h3 id='logo'>TR-101</h3>;
const Title = () => 
        <h1 id='title'><a href='https://rjbx.github.io/simplify'>simplify</a></h1>;
const Attribution = () => 
<h5 id='attribution'>Made by <a target='_blank' href='https://rjbx.github.io/simplify'>rjbx</a> with <a target='_blank' href='https://reactjs.org'>ReactJS</a> and <a target='_blank' href='https://mathjs.org'>MathJS</a></h5>;
const Readout = (props) => 
      <section id='readout'>
        <table onClick={props.handleClick}>
           <input value={props.expr} placeholder={props.temp} onChange={props.handleChange} onClick={props.handleClick}/>
        </table>
      </section>;
const Keypad = (props) =>
      <section id='keypad'>
        <table>
          <tbody>
            <tr>
              <Btn handleClick={props.handleClick} text='del' class='red-button'/>
              <Btn handleClick={props.handleClick} text='(' class='red-button'/>
              <Btn handleClick={props.handleClick} text=')' class='red-button'/>
              <Btn handleClick={props.handleClick} text='=' class='red-button'/>
            </tr>
            <tr>
              <Btn handleClick={props.handleClick} text='9' class='white-button'/>
              <Btn handleClick={props.handleClick} text='8' class='white-button'/>
              <Btn handleClick={props.handleClick} text='7' class='white-button'/>
              <Btn handleClick={props.handleClick} text='+' class='red-button'/>
            </tr> 
            <tr>
              <Btn handleClick={props.handleClick} text='6' class='white-button'/>
              <Btn handleClick={props.handleClick} text='5' class='white-button'/>
              <Btn handleClick={props.handleClick} text='4' class='white-button'/>
              <Btn handleClick={props.handleClick} text='–' class='red-button'/>
            </tr>
            <tr>
              <Btn handleClick={props.handleClick} text='3' class='white-button'/>
              <Btn handleClick={props.handleClick} text='2' class='white-button'/>
              <Btn handleClick={props.handleClick} text='1' class='white-button'/>
              <Btn handleClick={props.handleClick} text='*' class='red-button'/>
            </tr>
            <tr>
              <Btn handleClick={props.handleClick} text='0' class='white-button'/>
              <Btn handleClick={props.handleClick} text='.' class='white-button'/>
              <Btn handleClick={props.handleClick} text='^' class='white-button'/>
              <Btn handleClick={props.handleClick} text='/' class='red-button'/>
            </tr>
            <tr>
              <Btn handleClick={props.handleClick} text='log' value='log10' class='white-button'/>
              <Btn handleClick={props.handleClick} text='ln' value='log' class='white-button'/>
              <Btn handleClick={props.handleClick} text='e' class='white-button'/>
              <Btn handleClick={props.handleClick} text='sqrt' class='red-button'/>
            </tr>
            <tr>
              <Btn handleClick={props.handleClick} text='sin' class='white-button'/>
              <Btn handleClick={props.handleClick} text='cos' class='white-button'/>
              <Btn handleClick={props.handleClick} text='tan' class='white-button'/>
              <Btn handleClick={props.handleClick} text='pi' class='red-button'/>
            </tr>
            <tr>
              <Btn handleClick={props.handleClick} text='arcsin' value='asin' class='white-button'/>
              <Btn handleClick={props.handleClick} text='arccos' value='acos' class='white-button'/>
              <Btn handleClick={props.handleClick} text='arctan' value='atan' class='white-button'/>
              <Btn handleClick={props.handleClick} text='deg' class='red-button'/>
            </tr>
          </tbody>
        </table>
      </section>;
const Panel = (props) =>
      <section id='panel'>
        <button id='switch'>
          <table>
            <tr>
              <td class='toggle' onClick={props.toggleMode}></td>
              <td class='toggle' onClick={props.toggleMode}></td>
              <td class='toggle' onClick={props.toggleMode}></td>
              <td class='toggle' onClick={props.toggleMode}></td>
            </tr>
          </table>
        </button>
      </section>;
const Plate = (props) => 
      <section id='plate'>
        <table>
          <tr>
            <td><Logo /></td>
            <td>
              <Btn handleClick={props.handleClick} class='blue-button' text='AC'/>
            </td>
          </tr>
        </table>
      </section>;
const Canvas = () => 
        <center><canvas id='canvas' width={215} height={350}></canvas></center>;
const Terminal = (props) => 
        <div id='terminal'><ul>{
            props.save.map((v,i) => {
              return (<li>{v}</li>);
            })
          }</ul></div>;
class Header extends React.Component {
  constructor(props) {
    super(props);
  }
  render() {
    return (<header><div class='row'><div class='column'><Title /></div></div></header>);
  }
}
class Monitor extends React.Component {
  constructor(props) {
    super(props);
  } 
  render() {
    return (
    <section id='monitor'>
        <Terminal save={this.props.save}/>
        <center>
          <div class='reset-wrapper'>
            <button id='reset-terminal' onClick={this.props.handleReset}>♻</button>
          </div>
        </center>
      </section>
    );
  }
}

class Blackboard extends React.Component {
  constructor(props) {
    super(props);
  }
  render() { 
    return (
      <section id='blackboard'>
        <Canvas />
        <center>
          <div class='reset-wrapper'>
            <button id='reset-canvas' onClick={this.props.handleReset}>♻</button>
          </div>
        </center>
      </section>
    );
  }
}
class Calculator extends React.Component {
  constructor(props) {
    super(props);
  }
  render() {
    return (
      <section id='calculator'>
        <Readout expr={this.props.expr} temp={this.props.temp} handleChange={this.props.handleChange} />
        <Plate handleClick={this.props.handleClick} />
        <Panel toggleMode={this.props.toggleMode} />
        <Keypad handleClick={this.props.handleClick} />
       </section>
    );
  }
}
class Main extends React.Component {
  constructor(props) {
    super(props);
  } 
  render() {
    return (
      <main style={{backgroundColor: this.props.mode ? '#333' : '#fff' }}>
        <div class='row'>
          <div class="column col-md-4">
            <Blackboard handleReset={this.props.handleReset}/>
          </div>
          <div class="column col-md-4">
            <Calculator 
               expr={this.props.expr} 
               temp={this.props.temp} 
               handleChange={this.props.handleChange} 
               handleClick={this.props.handleClick}
               toggleMode={this.props.toggleMode}
              />
          </div>
          <div class="column col-md-4">
            <Monitor handleReset={this.props.handleReset} expr={this.props.expr} save={this.props.save}/>
          </div>
        </div>
      </main>
    );
  }
}
class Footer extends React.Component {
  constructor(props) {
    super(props);
  } 
  render() {
    return (<footer><div class='row'><div class='column'><Attribution /></div></div></footer>);
  }
}

class Simplify extends React.Component {
  constructor(props) {
    super(props);
    this.state = {
      expr: '',
      save: [],
      temp: '0',
      pad: [],
      mode: false
    };
    WebFont.load({
      google: {
       families: ['Quantico:400,700i', 'Poiret One']
      }
    });
    this.handleChange = this.handleChange.bind(this);
    this.handleClick = this.handleClick.bind(this);
    this.handleReset = this.handleReset.bind(this);
    this.initCanvas = this.initCanvas.bind(this);
    this.toggleMode = this.toggleMode.bind(this);
  }
  componentDidMount() {
    this.initCanvas();
  }
  initCanvas() { 
    let canvas = document.querySelector('canvas');
    let signaturePad = new SignaturePad(
      canvas, {
        backgroundColor: '#333',
        penColor: '#fff'
      });
    this.setState({
      pad: signaturePad
    });
  }
  handleClick(event) {
    let id = event.target.id;
    console.log(event.target.id);
    switch (id) {
      case 'AC': this.handleInput(''); break;
      case '#': this.toggleMode(); break;
      case '=': this.handleEval(); break;
      case 'del': this.handleInput(this.state.expr.slice(0,-1)); break;
      default: this.handleInput(this.state.expr + id);
    }
  }
  handleChange(event) {
    let value = event.target.value;
    console.log(value);
    switch (value.slice(-1)) {
      case '=': this.handleEval(); break;
      default: this.handleInput(value);
    }
  }
  handleInput(value) {
    this.setState({
      expr: value
    });
  }
  handleEval() {
    let result = math.evaluate(this.state.expr);
    let saves = this.state.save.concat(this.state.expr + ' = ' + result);
    this.setState({
      expr: result,
      save: saves
    });
  }
  handleReset(event) {
    let id = event.target.id;
    switch(id) {
      case 'reset-canvas':
        let freshPad = this.state.pad;
        freshPad.clear();
        this.setState({
          pad: freshPad
        });
        break;
      case 'reset-terminal': 
        this.setState({
          save: []
        });
        break;
    }
  }
  toggleMode() {
    console.log(this.state.mode);
    let inverse = !this.state.mode;
    this.setState({
      mode: inverse
    });
  }
  render() {
    return (
      <body>
        <Header mode={this.state.mode}/>
        <Main expr={this.state.expr} save={this.state.save} temp={this.state.temp} mode={this.state.mode} handleChange={this.handleChange} handleClick={this.handleClick} handleReset={this.handleReset} toggleMode={this.toggleMode}/>
        <Footer mode={this.state.mode}/>
      </body>
    );
  }
};

ReactDOM.render(<Simplify />, document.getElementById('react'));