const inputStyle = {width: '235px', height: '30px', backgroundColor: '#449944', fontFamily: 'Quantico', fontSize: '20px', textAlign: 'right'};
const calcStyle = {margin: 'auto', paddingTop: '30px', width: '270px', height: '360px', verticalAlign: 'middle', border: '5px groove #0090F7', borderRadius: '0px 0px 15px 15px', backgroundColor: '#0070D7'};
const logoStyle = {margin: '10px', fontFamily: 'Quantico', fontWeight: 'bold', fontStyle: 'italic', fontSize: '16px', color: 'white', textShadow: '1px 1px #222'};
const clearBtnStyle = {width: '165px', height: '24px', backgroundColor: '#0070D7', color: 'white', fontWeight: 'bold', fontSize: '11px', textAlign: 'right'};
const redBtnStyle = {width: '60px', height: '24px', backgroundColor: '#C73000', color: 'white', fontWeight: 'bold', fontSize: '11px'};
const blueBtnStyle = {width: '60px', height: '24px', backgroundColor: 'white', color: '#1040A0', fontWeight: 'bold', fontSize: '11px'};
const Btn = (props) => 
        <button style={props.style} onClick={props.handleClick} value={props.text} id={props.text}>{props.text}</button>;
const Logo = () => 
        <h3 style={logoStyle}>TG-108</h3>;
const Title = () => 
        <center><h1><a style={{fontSize: '20px', textDecoration: 'none', color: 'white', fontWeight: 'bold', textShadow: '0px 0px 3px black', fontFamily: 'Quantico'}} href='https://rjbx.github.io/simplify'>simplify</a></h1></center>;
const Attribution = () => 
        <center><h5 style={{fontFamily: 'sans', fontSize: '8px', color: 'grey'}}>Made by rjbx with React and MathJS</h5></center>;
const Display = (props) => 
      <section>
        <table style={{margin: 'auto', paddingTop: '20px'}} onClick={props.handleClick}>
           <input style={inputStyle} value={props.expr} placeholder={props.temp} onChange={props.handleChange} onClick={props.handleClick}/>
        </table>
      </section>;
const Keypad = (props) =>
      <section>
        <table style={{margin: 'auto'}}>
          <tbody>
            <tr>
              <Btn handleClick={props.handleClick} text='del' style={redBtnStyle}/>
              <Btn handleClick={props.handleClick} text='(' style={redBtnStyle}/>
              <Btn handleClick={props.handleClick} text=')' style={redBtnStyle}/>
              <Btn handleClick={props.handleClick} text='=' style={redBtnStyle}/>
            </tr>
            <tr>
              <Btn handleClick={props.handleClick} text='9' style={blueBtnStyle}/>
              <Btn handleClick={props.handleClick} text='8' style={blueBtnStyle}/>
              <Btn handleClick={props.handleClick} text='7' style={blueBtnStyle}/>
              <Btn handleClick={props.handleClick} text='+' style={redBtnStyle}/>
            </tr> 
            <tr>
              <Btn handleClick={props.handleClick} text='6' style={blueBtnStyle}/>
              <Btn handleClick={props.handleClick} text='5' style={blueBtnStyle}/>
              <Btn handleClick={props.handleClick} text='4' style={blueBtnStyle}/>
              <Btn handleClick={props.handleClick} text='–' style={redBtnStyle}/>
            </tr>
            <tr>
              <Btn handleClick={props.handleClick} text='3' style={blueBtnStyle}/>
              <Btn handleClick={props.handleClick} text='2' style={blueBtnStyle}/>
              <Btn handleClick={props.handleClick} text='1' style={blueBtnStyle}/>
              <Btn handleClick={props.handleClick} text='*' style={redBtnStyle}/>
            </tr>
            <tr>
              <Btn handleClick={props.handleClick} text='0' style={blueBtnStyle}/>
              <Btn handleClick={props.handleClick} text='.' style={blueBtnStyle}/>
              <Btn handleClick={props.handleClick} text='^' style={blueBtnStyle}/>
              <Btn handleClick={props.handleClick} text='/' style={redBtnStyle}/>
            </tr>
            <tr>
              <Btn handleClick={props.handleClick} text='log' style={blueBtnStyle}/>
              <Btn handleClick={props.handleClick} text='ln' style={blueBtnStyle}/>
              <Btn handleClick={props.handleClick} text='e^' style={blueBtnStyle}/>
              <Btn handleClick={props.handleClick} text='sqrt' style={redBtnStyle}/>
            </tr>
            <tr>
              <Btn handleClick={props.handleClick} text='sin' style={blueBtnStyle}/>
              <Btn handleClick={props.handleClick} text='cos' style={blueBtnStyle}/>
              <Btn handleClick={props.handleClick} text='tan' style={blueBtnStyle}/>
              <Btn handleClick={props.handleClick} text='pi' style={redBtnStyle}/>
            </tr>
            <tr>
              <Btn handleClick={props.handleClick} text='arcsin' style={blueBtnStyle}/>
              <Btn handleClick={props.handleClick} text='arccos' style={blueBtnStyle}/>
              <Btn handleClick={props.handleClick} text='arctan' style={blueBtnStyle}/>
              <Btn handleClick={props.handleClick} text='deg' style={redBtnStyle}/>
            </tr>
          </tbody>
        </table>
      </section>;
const Panel = (props) =>
      <section>
        <button value='panel' style={{backgroundColor: '#0070D7', border: '3px inset #0090FF'}}>
          <table style={{margin:'auto', border:'1px solid #952', width: '240px', height: '30px', backgroundColor: '#222'}}>
            <tr>
              <td id='toggle' style={{border: '1px solid #520'}} onClick={props.handleClick}></td>
              <td id='toggle' style={{border: '1px solid #520'}} onClick={props.handleClick}></td>
              <td id='toggle' style={{border: '1px solid #520'}} onClick={props.handleClick}></td>
              <td id='toggle' style={{border: '1px solid #520'}} onClick={props.handleClick}></td>
            </tr>
          </table>
        </button>
      </section>;
const Plate = (props) => 
      <section>
        <table>
          <tr>
            <td><Logo /></td>
            <td>
              <Btn handleClick={props.handleClick} style={clearBtnStyle} text='AC'/>
            </td>
          </tr>
        </table>
      </section>;
const Canvas = () => 
      <section style={{border: '4px solid #DDD', borderTop: 'none', borderRight: 'none', borderRadius: '10px', marginLeft: '30px'}}>
        <canvas id='canvas' width={400} height={350} style={{backgroundColor: 'white', width: '400px', height: '350px'}}></canvas>
        <center>
          <div style={{height: '10px'}}>
            <button id="clear">♻</button>
          </div>
        </center>
      </section>;
const Sheet = (props) => 
      <section style={{border: '4px solid #DDD', borderTop: 'none', borderRight: 'none', borderRadius: '10px', marginLeft: '30px'}}>
        <div style={{backgroundColor: 'white', width: '400px', height: '350px', color: 'black', overflow: 'auto'}}><ul>{
            props.save.map((v,i) => {
              return (<li>{v}</li>);
            })
          }</ul></div>
          <center>
          <div style={{height: '10px'}}>
            <button id="clear">♻</button>
          </div>
        </center>
      </section>;
class Header extends React.Component {
  constructor(props) {
    super(props);
  }
  render() {
    return (<header><Title /></header>);
  }
}
class Ribbon extends React.Component {
  constructor(props) {
    super(props);
  } 
  render() {
    return (
    <Sheet save={this.props.save}/>
    );
  }
}

class Whiteboard extends React.Component {
  constructor(props) {
    super(props);
    this.initCanvas = this.initCanvas.bind(this);
  }
  componentDidMount() {
    this.initCanvas();
  }
  initCanvas() { 
    let canvas = document.querySelector('canvas');
    let signaturePad = new SignaturePad(canvas);
  }
  render() { 
    return (
      <Canvas />
    );
  }
}
class Calculator extends React.Component {
  constructor(props) {
    super(props);
  }
  render() {
    return (
      <section style={calcStyle}>
        <Display expr={this.props.expr} temp={this.props.temp} handleChange={this.props.handleChange} />
        <Plate handleClick={this.props.handleClick} />
        <Panel handleClick={this.props.handleClick} />
        <Keypad handleClick={this.props.handleClick} />
       </section>
    );
  }
}
class Main extends React.Component {
  constructor(props) {
    super(props);
  } 
  render() {
    return (
      <main>
        <div class='row'>
          <div class="column col-md-4">
            <Whiteboard />
          </div>
          <div class="column col-md-4">
            <Calculator 
               expr={this.props.expr} 
               temp={this.props.temp} 
               handleChange={this.props.handleChange} 
               handleClick={this.props.handleClick}
              />
          </div>
          <div class="column col-md-4">
            <Ribbon expr={this.props.expr} save={this.props.save}/>
          </div>
        </div>
      </main>
    );
  }
}
class Footer extends React.Component {
  constructor(props) {
    super(props);
  } 
  render() {
    return (<footer><Attribution /></footer>);
  }
}

class Simplify extends React.Component {
  constructor(props) {
    super(props);
    this.state = {
      expr: '',
      save: [],
      temp: '0',
      mode: false
    };
    WebFont.load({
      google: {
       families: ['Quantico:400,700i']
      }
    })
    this.handleChange = this.handleChange.bind(this);
    this.handleClick = this.handleClick.bind(this);
    this.toggleMode = this.toggleMode(this);
  }
  handleClick(event) {
    let id = event.target.id;
    console.log(event.target.id);
    switch (id) {
      case 'AC': this.handleInput(''); break;
      case 'toggle': this.toggleMode(); break;
      case '=': this.handleEval(); break;
      case 'del': this.handleInput(this.state.expr.slice(0,-1)); break;
      default: this.handleInput(this.state.expr + id);
    }
  }
  handleChange(event) {
    this.handleInput(event.target.value);
  }
  handleInput(value) {
    this.setState({
      expr: value
    });
  }
  handleEval() {
    let result = math.evaluate(this.state.expr);
    let saves = this.state.save.concat(this.state.expr + ' = ' + result);
    this.setState({
      expr: result,
      save: saves
    });
  }
  toggleMode() {
    let inverse = !this.state.dark;
    this.setState({
      mode: inverse
    });
  }
  render() {
    return (
      <body>
        <Header mode={this.state.mode}/>
        <Main expr={this.state.expr} save={this.state.save} temp={this.state.temp} mode={this.state.mode} handleChange={this.handleChange} handleClick={this.handleClick} />
        <Footer mode={this.state.mode}/>
      </body>
    );
  }
};

ReactDOM.render(<Simplify />, document.getElementById('react'));